# Copyright 2021 The IREE Authors
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

# Tests for common transforms.

load("//build_tools/bazel:iree_lit_test.bzl", "iree_lit_test_suite")
load("//build_tools/bazel:enforce_glob.bzl", "enforce_glob")

package(
    features = ["layering_check"],
    licenses = ["notice"],  # Apache 2.0
)

iree_lit_test_suite(
    name = "lit",
    srcs = enforce_glob(
        [
            "attention.mlir",
            "conv_pipeline_test.mlir",
            "convert_to_nvvm.mlir",
            "convert_to_nvvm_error.mlir",
            "convert_to_rocdl.mlir",
            "create_async_groups.mlir",
            "distribute_to_thread.mlir",
            "distribute_foreach.mlir",
            "elementwise_pipeline.mlir",
            "gpu_set_num_workgroups.mlir",
            "nvvm_pipeline_test.mlir",
            "nvvm_mma_sync_pipeline_test.mlir",
            "reduction_pipeline_transform.mlir",
            "reduction_pipeline.mlir",
            "rocdl_pipeline_test.mlir",
            "set_transform_strategy.mlir",
            "illegal_configuration.mlir",
            "layout_analysis_and_distribution.mlir",
            "linalg_transform.mlir",
            "legalize.mlir",
            "pack_pipeline_test.mlir",
            "pack_shared_memory_alloc.mlir",
            "tensor_alloc.mlir",
            "tensor_pad.mlir",
            "tensorcore_vectorization.mlir",
            "tile_on_tensor.mlir",
            "transform_dialect_hoist_allocs.mlir",
            "transform_dialect_vector_distribution.mlir",
            "transform_dialect_bufferize.mlir",
            "transform_dialect_promote_operands.mlir",
            "transform_distribute_forall.mlir",
            "transform_gpu_pipelining.mlir",
            "transform_vector_to_mma.mlir",
            "transpose_pipeline_test.mlir",
            "vector_to_gpu.mlir",
            "workgroup_specialization_pipeline_test.mlir",
        ],
        include = ["*.mlir"],
        # tensor_dialect_*_spec is a an MLIR file that specifies a
        # transformation, it needs to be included as data.
        exclude = [
            "transform_dialect_codegen_attention_spec.mlir",
            "transform_dialect_codegen_bufferize_spec.mlir",
            "transform_dialect_codegen_foreach_to_gpu_spec.mlir",
            "transform_dialect_codegen_vector_distribution_spec.mlir",
            "transform_dialect_codegen_vector_warp_execute_on_lane_0_spec.mlir",
        ],
    ),
    cfg = "//compiler:lit.cfg.py",
    data = [
        "transform_dialect_codegen_attention_spec.mlir",
        "transform_dialect_codegen_bufferize_spec.mlir",
        "transform_dialect_codegen_foreach_to_gpu_spec.mlir",
        "transform_dialect_codegen_vector_distribution_spec.mlir",
        "transform_dialect_codegen_vector_warp_execute_on_lane_0_spec.mlir",
    ],
    tools = [
        "//tools:iree-opt",
        "@llvm-project//llvm:FileCheck",
    ],
)
